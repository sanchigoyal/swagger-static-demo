buildscript {
	ext {
		springBootVersion = '2.0.3.RELEASE'
        swaggerOutputDir = file("${buildDir}/swagger")
        swagger2MarkupOutputDir = file("${buildDir}/asciidoc/generated")
	}
	repositories {
        jcenter()
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath 'io.github.swagger2markup:swagger2markup-gradle-plugin:1.3.3'
		classpath 'org.asciidoctor:asciidoctor-gradle-plugin:1.5.3'
		classpath 'org.asciidoctor:asciidoctorj-pdf:1.5.0-alpha.10.1'
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'io.github.swagger2markup'
apply plugin: 'org.asciidoctor.convert'

group = 'com.sanchi.java.spring.swagger'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
    jcenter()
	mavenCentral()
}


dependencies {
	compile('org.springframework.boot:spring-boot-starter-web')
	compile('io.springfox:springfox-swagger2:2.8.0')
	testCompile('org.springframework.boot:spring-boot-starter-test')
    testCompile('org.springframework.restdocs:spring-restdocs-mockmvc')
}

test {
    systemProperty 'io.springfox.staticdocs.outputDir', swaggerOutputDir
}

convertSwagger2markup {
    dependsOn test
    swaggerInput "${swaggerOutputDir}/swagger.json"
    outputDir swagger2MarkupOutputDir
    config = ['swagger2markup.pathsGroupedBy' : 'TAGS']
}

asciidoctor {
	dependsOn convertSwagger2markup
    sourceDir "/src/main/resources/static/docs/asciidoc"
	sources {
		include 'swagger-static-demo.adoc'
	}
	backends = ['pdf']
	attributes = [
			doctype: 'book',
			toc: 'left',
			toclevels: '3',
			numbered: '',
			sectlinks: '',
			sectanchors: '',
			hardbreaks: '',
			generated: swagger2MarkupOutputDir
	]
}

jar {
    dependsOn asciidoctor
}
